name: Build & Release Discord Cleaner

on:
  push:
    tags: "v*" # Сборка и релиз только при пуше тега v*
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm globally
        run: |
          npm install -g pnpm
          echo "PNPM_HOME=$(pnpm root -g)" >> $GITHUB_ENV
          echo "$PNPM_HOME:$PATH" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install

      - name: Build Vite app
        run: pnpm vite:build

      - name: Build Electron App
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            pnpm electron:build:windows
          elif [[ "${{ runner.os }}" == "Linux" ]]; then
            pnpm electron:build:linux
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            pnpm electron:build:mac
          else
            echo "Skipping build: unsupported OS"
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: discord-cleaner-${{ matrix.os }}
          path: dist/
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: discord-cleaner-*
          merge-multiple: true

      - name: Get version from package.json
        id: version
        run: echo "VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.VERSION }}
          name: Discord Cleaner Release v${{ env.VERSION }}
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
