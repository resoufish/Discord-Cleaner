name: Build & Release Discord Cleaner

on:
  push:
    tags: "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      GH: ${{ secrets.GH_TOKEN }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm@latest

      - name: Verify pnpm
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Vite app
        run: pnpm vite:build

      - name: Build Electron on Windows
        if: runner.os == 'Windows'
        run: pnpm electron:build:windows

      - name: Build Electron on Linux
        if: runner.os == 'Linux'
        run: pnpm electron:build:linux

      - name: Build Electron on macOS
        if: runner.os == 'macOS'
        run: pnpm electron:build:mac

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: discord-cleaner-${{ matrix.os }}
          path: dist/
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: discord-cleaner-*
          merge-multiple: true

      - name: Get version from package.json
        id: version
        run: echo VERSION=$(node -p "require('./package.json').version") >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.VERSION }}
          name: Discord Cleaner Release v${{ env.VERSION }}
          artifacts: "dist/*"
          token: ${{ secrets.GH_TOKEN }}
